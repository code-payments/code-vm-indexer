// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: indexer/model.proto

package indexer

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{1}
}

func (x *Hash) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Proof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root           *Hash   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Proof          []*Hash `protobuf:"bytes,2,rep,name=proof,proto3" json:"proof,omitempty"`
	Leaf           *Hash   `protobuf:"bytes,3,opt,name=leaf,proto3" json:"leaf,omitempty"`
	ForLeafIndex   uint64  `protobuf:"varint,4,opt,name=for_leaf_index,json=forLeafIndex,proto3" json:"for_leaf_index,omitempty"`
	UntilLeafIndex uint64  `protobuf:"varint,5,opt,name=until_leaf_index,json=untilLeafIndex,proto3" json:"until_leaf_index,omitempty"`
}

func (x *Proof) Reset() {
	*x = Proof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{2}
}

func (x *Proof) GetRoot() *Hash {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *Proof) GetProof() []*Hash {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *Proof) GetLeaf() *Hash {
	if x != nil {
		return x.Leaf
	}
	return nil
}

func (x *Proof) GetForLeafIndex() uint64 {
	if x != nil {
		return x.ForLeafIndex
	}
	return 0
}

func (x *Proof) GetUntilLeafIndex() uint64 {
	if x != nil {
		return x.UntilLeafIndex
	}
	return 0
}

type VirtualTimelockAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner        *Address `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Nonce        *Hash    `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	TokenBump    uint32   `protobuf:"varint,3,opt,name=token_bump,json=tokenBump,proto3" json:"token_bump,omitempty"`
	UnlockBump   uint32   `protobuf:"varint,4,opt,name=unlock_bump,json=unlockBump,proto3" json:"unlock_bump,omitempty"`
	WithdrawBump uint32   `protobuf:"varint,5,opt,name=withdraw_bump,json=withdrawBump,proto3" json:"withdraw_bump,omitempty"`
	Balance      uint64   `protobuf:"varint,6,opt,name=balance,proto3" json:"balance,omitempty"`
	Bump         uint32   `protobuf:"varint,7,opt,name=bump,proto3" json:"bump,omitempty"`
}

func (x *VirtualTimelockAccount) Reset() {
	*x = VirtualTimelockAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualTimelockAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualTimelockAccount) ProtoMessage() {}

func (x *VirtualTimelockAccount) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualTimelockAccount.ProtoReflect.Descriptor instead.
func (*VirtualTimelockAccount) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{3}
}

func (x *VirtualTimelockAccount) GetOwner() *Address {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *VirtualTimelockAccount) GetNonce() *Hash {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *VirtualTimelockAccount) GetTokenBump() uint32 {
	if x != nil {
		return x.TokenBump
	}
	return 0
}

func (x *VirtualTimelockAccount) GetUnlockBump() uint32 {
	if x != nil {
		return x.UnlockBump
	}
	return 0
}

func (x *VirtualTimelockAccount) GetWithdrawBump() uint32 {
	if x != nil {
		return x.WithdrawBump
	}
	return 0
}

func (x *VirtualTimelockAccount) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *VirtualTimelockAccount) GetBump() uint32 {
	if x != nil {
		return x.Bump
	}
	return 0
}

type VirtualDurableNonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Nonce   *Hash    `protobuf:"bytes,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *VirtualDurableNonce) Reset() {
	*x = VirtualDurableNonce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualDurableNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualDurableNonce) ProtoMessage() {}

func (x *VirtualDurableNonce) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualDurableNonce.ProtoReflect.Descriptor instead.
func (*VirtualDurableNonce) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{4}
}

func (x *VirtualDurableNonce) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *VirtualDurableNonce) GetNonce() *Hash {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type VirtualRelayAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *Address `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Commitment  *Hash    `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
	RecentRoot  *Hash    `protobuf:"bytes,3,opt,name=recent_root,json=recentRoot,proto3" json:"recent_root,omitempty"`
	Destination *Address `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *VirtualRelayAccount) Reset() {
	*x = VirtualRelayAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualRelayAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualRelayAccount) ProtoMessage() {}

func (x *VirtualRelayAccount) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualRelayAccount.ProtoReflect.Descriptor instead.
func (*VirtualRelayAccount) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{5}
}

func (x *VirtualRelayAccount) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *VirtualRelayAccount) GetCommitment() *Hash {
	if x != nil {
		return x.Commitment
	}
	return nil
}

func (x *VirtualRelayAccount) GetRecentRoot() *Hash {
	if x != nil {
		return x.RecentRoot
	}
	return nil
}

func (x *VirtualRelayAccount) GetDestination() *Address {
	if x != nil {
		return x.Destination
	}
	return nil
}

type VirtualAccountStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Storage:
	//
	//	*VirtualAccountStorage_Memory
	//	*VirtualAccountStorage_Compressed
	Storage isVirtualAccountStorage_Storage `protobuf_oneof:"storage"`
}

func (x *VirtualAccountStorage) Reset() {
	*x = VirtualAccountStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualAccountStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualAccountStorage) ProtoMessage() {}

func (x *VirtualAccountStorage) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualAccountStorage.ProtoReflect.Descriptor instead.
func (*VirtualAccountStorage) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{6}
}

func (m *VirtualAccountStorage) GetStorage() isVirtualAccountStorage_Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (x *VirtualAccountStorage) GetMemory() *MemoryVirtualAccountStorage {
	if x, ok := x.GetStorage().(*VirtualAccountStorage_Memory); ok {
		return x.Memory
	}
	return nil
}

func (x *VirtualAccountStorage) GetCompressed() *CompressedVirtualAccountStorage {
	if x, ok := x.GetStorage().(*VirtualAccountStorage_Compressed); ok {
		return x.Compressed
	}
	return nil
}

type isVirtualAccountStorage_Storage interface {
	isVirtualAccountStorage_Storage()
}

type VirtualAccountStorage_Memory struct {
	Memory *MemoryVirtualAccountStorage `protobuf:"bytes,1,opt,name=memory,proto3,oneof"`
}

type VirtualAccountStorage_Compressed struct {
	Compressed *CompressedVirtualAccountStorage `protobuf:"bytes,2,opt,name=compressed,proto3,oneof"`
}

func (*VirtualAccountStorage_Memory) isVirtualAccountStorage_Storage() {}

func (*VirtualAccountStorage_Compressed) isVirtualAccountStorage_Storage() {}

type MemoryVirtualAccountStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Address `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Index   uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *MemoryVirtualAccountStorage) Reset() {
	*x = MemoryVirtualAccountStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryVirtualAccountStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryVirtualAccountStorage) ProtoMessage() {}

func (x *MemoryVirtualAccountStorage) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryVirtualAccountStorage.ProtoReflect.Descriptor instead.
func (*MemoryVirtualAccountStorage) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{7}
}

func (x *MemoryVirtualAccountStorage) GetAccount() *Address {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *MemoryVirtualAccountStorage) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type CompressedVirtualAccountStorage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *Address `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Proof   *Proof   `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *CompressedVirtualAccountStorage) Reset() {
	*x = CompressedVirtualAccountStorage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressedVirtualAccountStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedVirtualAccountStorage) ProtoMessage() {}

func (x *CompressedVirtualAccountStorage) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedVirtualAccountStorage.ProtoReflect.Descriptor instead.
func (*CompressedVirtualAccountStorage) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{8}
}

func (x *CompressedVirtualAccountStorage) GetAccount() *Address {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *CompressedVirtualAccountStorage) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type VirtualTimelockAccountWithStorageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *VirtualTimelockAccount `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Storage *VirtualAccountStorage  `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"`
	Slot    uint64                  `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *VirtualTimelockAccountWithStorageMetadata) Reset() {
	*x = VirtualTimelockAccountWithStorageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualTimelockAccountWithStorageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualTimelockAccountWithStorageMetadata) ProtoMessage() {}

func (x *VirtualTimelockAccountWithStorageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualTimelockAccountWithStorageMetadata.ProtoReflect.Descriptor instead.
func (*VirtualTimelockAccountWithStorageMetadata) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{9}
}

func (x *VirtualTimelockAccountWithStorageMetadata) GetAccount() *VirtualTimelockAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *VirtualTimelockAccountWithStorageMetadata) GetStorage() *VirtualAccountStorage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *VirtualTimelockAccountWithStorageMetadata) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type VirtualDurableNonceWithStorageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *VirtualDurableNonce   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Storage *VirtualAccountStorage `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"`
	Slot    uint64                 `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *VirtualDurableNonceWithStorageMetadata) Reset() {
	*x = VirtualDurableNonceWithStorageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualDurableNonceWithStorageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualDurableNonceWithStorageMetadata) ProtoMessage() {}

func (x *VirtualDurableNonceWithStorageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualDurableNonceWithStorageMetadata.ProtoReflect.Descriptor instead.
func (*VirtualDurableNonceWithStorageMetadata) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{10}
}

func (x *VirtualDurableNonceWithStorageMetadata) GetAccount() *VirtualDurableNonce {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *VirtualDurableNonceWithStorageMetadata) GetStorage() *VirtualAccountStorage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *VirtualDurableNonceWithStorageMetadata) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type VirtualRelayAccountWithStorageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *VirtualRelayAccount   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Storage *VirtualAccountStorage `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"`
	Slot    uint64                 `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *VirtualRelayAccountWithStorageMetadata) Reset() {
	*x = VirtualRelayAccountWithStorageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualRelayAccountWithStorageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualRelayAccountWithStorageMetadata) ProtoMessage() {}

func (x *VirtualRelayAccountWithStorageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualRelayAccountWithStorageMetadata.ProtoReflect.Descriptor instead.
func (*VirtualRelayAccountWithStorageMetadata) Descriptor() ([]byte, []int) {
	return file_indexer_model_proto_rawDescGZIP(), []int{11}
}

func (x *VirtualRelayAccountWithStorageMetadata) GetAccount() *VirtualRelayAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *VirtualRelayAccountWithStorageMetadata) GetStorage() *VirtualAccountStorage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *VirtualRelayAccountWithStorageMetadata) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

var File_indexer_model_proto protoreflect.FileDescriptor

var file_indexer_model_proto_rawDesc = []byte{
	0x0a, 0x13, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76,
	0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x42, 0x0b, 0xba, 0xe9, 0xc0, 0x03, 0x06, 0x7a, 0x04, 0x10, 0x20, 0x18,
	0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42,
	0x0b, 0xba, 0xe9, 0xc0, 0x03, 0x06, 0x7a, 0x04, 0x10, 0x20, 0x18, 0x20, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x30, 0x0a,
	0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x0a, 0xba,
	0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12,
	0x34, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x0c, 0xba, 0xe9, 0xc0, 0x03, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10, 0x3f, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f, 0x72, 0x5f, 0x6c,
	0x65, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x66, 0x6f, 0x72, 0x4c, 0x65, 0x61, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a,
	0x10, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x4c, 0x65,
	0x61, 0x66, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xc6, 0x02, 0x0a, 0x16, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x62, 0x75, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x75, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x62, 0x75, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xba,
	0xe9, 0xc0, 0x03, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x75, 0x6d, 0x70, 0x12, 0x2f, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x5f, 0x62, 0x75, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xba, 0xe9,
	0xc0, 0x03, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x42, 0x75, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x62, 0x75, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a,
	0xba, 0xe9, 0xc0, 0x03, 0x05, 0x2a, 0x03, 0x18, 0xff, 0x01, 0x52, 0x04, 0x62, 0x75, 0x6d, 0x70,
	0x22, 0x84, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0a,
	0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x13, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbb, 0x01, 0x0a, 0x15, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x4d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x10, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x05, 0xb8, 0xe9, 0xc0, 0x03, 0x01, 0x22, 0x7b, 0x0a, 0x1b, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0a, 0xba,
	0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x0b, 0xba, 0xe9, 0xc0, 0x03, 0x06, 0x2a, 0x04, 0x18, 0xff, 0xff, 0x03, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x91, 0x01, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22, 0xd2, 0x01, 0x0a, 0x29, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0xba, 0xe9,
	0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0xcc,
	0x01, 0x0a, 0x26, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44,
	0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x42, 0x0a, 0xba, 0xe9, 0xc0,
	0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x47, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0xcc, 0x01,
	0x0a, 0x26, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x65,
	0x6c, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x47, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x76, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x42, 0x0a, 0xba, 0xe9, 0xc0, 0x03, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x42, 0x4a, 0x5a, 0x48,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x76, 0x6d,
	0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x3b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_indexer_model_proto_rawDescOnce sync.Once
	file_indexer_model_proto_rawDescData = file_indexer_model_proto_rawDesc
)

func file_indexer_model_proto_rawDescGZIP() []byte {
	file_indexer_model_proto_rawDescOnce.Do(func() {
		file_indexer_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_indexer_model_proto_rawDescData)
	})
	return file_indexer_model_proto_rawDescData
}

var file_indexer_model_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_indexer_model_proto_goTypes = []interface{}{
	(*Address)(nil),                                   // 0: code.vm.v1.Address
	(*Hash)(nil),                                      // 1: code.vm.v1.Hash
	(*Proof)(nil),                                     // 2: code.vm.v1.Proof
	(*VirtualTimelockAccount)(nil),                    // 3: code.vm.v1.VirtualTimelockAccount
	(*VirtualDurableNonce)(nil),                       // 4: code.vm.v1.VirtualDurableNonce
	(*VirtualRelayAccount)(nil),                       // 5: code.vm.v1.VirtualRelayAccount
	(*VirtualAccountStorage)(nil),                     // 6: code.vm.v1.VirtualAccountStorage
	(*MemoryVirtualAccountStorage)(nil),               // 7: code.vm.v1.MemoryVirtualAccountStorage
	(*CompressedVirtualAccountStorage)(nil),           // 8: code.vm.v1.CompressedVirtualAccountStorage
	(*VirtualTimelockAccountWithStorageMetadata)(nil), // 9: code.vm.v1.VirtualTimelockAccountWithStorageMetadata
	(*VirtualDurableNonceWithStorageMetadata)(nil),    // 10: code.vm.v1.VirtualDurableNonceWithStorageMetadata
	(*VirtualRelayAccountWithStorageMetadata)(nil),    // 11: code.vm.v1.VirtualRelayAccountWithStorageMetadata
}
var file_indexer_model_proto_depIdxs = []int32{
	1,  // 0: code.vm.v1.Proof.root:type_name -> code.vm.v1.Hash
	1,  // 1: code.vm.v1.Proof.proof:type_name -> code.vm.v1.Hash
	1,  // 2: code.vm.v1.Proof.leaf:type_name -> code.vm.v1.Hash
	0,  // 3: code.vm.v1.VirtualTimelockAccount.owner:type_name -> code.vm.v1.Address
	1,  // 4: code.vm.v1.VirtualTimelockAccount.nonce:type_name -> code.vm.v1.Hash
	0,  // 5: code.vm.v1.VirtualDurableNonce.address:type_name -> code.vm.v1.Address
	1,  // 6: code.vm.v1.VirtualDurableNonce.nonce:type_name -> code.vm.v1.Hash
	0,  // 7: code.vm.v1.VirtualRelayAccount.address:type_name -> code.vm.v1.Address
	1,  // 8: code.vm.v1.VirtualRelayAccount.commitment:type_name -> code.vm.v1.Hash
	1,  // 9: code.vm.v1.VirtualRelayAccount.recent_root:type_name -> code.vm.v1.Hash
	0,  // 10: code.vm.v1.VirtualRelayAccount.destination:type_name -> code.vm.v1.Address
	7,  // 11: code.vm.v1.VirtualAccountStorage.memory:type_name -> code.vm.v1.MemoryVirtualAccountStorage
	8,  // 12: code.vm.v1.VirtualAccountStorage.compressed:type_name -> code.vm.v1.CompressedVirtualAccountStorage
	0,  // 13: code.vm.v1.MemoryVirtualAccountStorage.account:type_name -> code.vm.v1.Address
	0,  // 14: code.vm.v1.CompressedVirtualAccountStorage.account:type_name -> code.vm.v1.Address
	2,  // 15: code.vm.v1.CompressedVirtualAccountStorage.proof:type_name -> code.vm.v1.Proof
	3,  // 16: code.vm.v1.VirtualTimelockAccountWithStorageMetadata.account:type_name -> code.vm.v1.VirtualTimelockAccount
	6,  // 17: code.vm.v1.VirtualTimelockAccountWithStorageMetadata.storage:type_name -> code.vm.v1.VirtualAccountStorage
	4,  // 18: code.vm.v1.VirtualDurableNonceWithStorageMetadata.account:type_name -> code.vm.v1.VirtualDurableNonce
	6,  // 19: code.vm.v1.VirtualDurableNonceWithStorageMetadata.storage:type_name -> code.vm.v1.VirtualAccountStorage
	5,  // 20: code.vm.v1.VirtualRelayAccountWithStorageMetadata.account:type_name -> code.vm.v1.VirtualRelayAccount
	6,  // 21: code.vm.v1.VirtualRelayAccountWithStorageMetadata.storage:type_name -> code.vm.v1.VirtualAccountStorage
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_indexer_model_proto_init() }
func file_indexer_model_proto_init() {
	if File_indexer_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_indexer_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualTimelockAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualDurableNonce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualRelayAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualAccountStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryVirtualAccountStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressedVirtualAccountStorage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualTimelockAccountWithStorageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualDurableNonceWithStorageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualRelayAccountWithStorageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_indexer_model_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*VirtualAccountStorage_Memory)(nil),
		(*VirtualAccountStorage_Compressed)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_indexer_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_indexer_model_proto_goTypes,
		DependencyIndexes: file_indexer_model_proto_depIdxs,
		MessageInfos:      file_indexer_model_proto_msgTypes,
	}.Build()
	File_indexer_model_proto = out.File
	file_indexer_model_proto_rawDesc = nil
	file_indexer_model_proto_goTypes = nil
	file_indexer_model_proto_depIdxs = nil
}
